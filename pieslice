#!/bin/bash

if [ ! -e polyseg ]; then
    gcc polyseg.c -lm -o polyseg
fi

# example output:
#   'sq sq sq sq' http://youtu.be/n9KXPlfdo_s

WH=720
CX=360
GEO=${WH}x${WH}
CY=$CX
R=300

SIDES=4
ROTDELTA=$(echo "scale=5;360/$SIDES" | bc)
ROT=0

FRAME=1
MAXFRAMES=2500
FIRST=1

while [ $FRAME -le $MAXFRAMES ]
do
    echo -n "Rendering frame $FRAME ..."
    if [ $FRAME -ge $FIRST ]; then
        SVG=$(./polyseg -s $SIDES -x $CX -y $CY -r $R -R $ROT --svg)
        MASK=$(printf "out/mask-%04d.png" $FRAME)
        SEG=$(printf "out/seg-%04d.png" $FRAME)
        OUT=$(printf "out/frame-%04d.png" $FRAME)
        IN=$(printf "vid/frame%06d_SCALED.png" $FRAME)

        convert -size $GEO xc:black -stroke grey -fill white \
                -draw "path '$SVG'" -alpha copy $MASK

        convert -size $GEO xc:transparent -page +640+360 $IN \
                $MASK -compose Screen -composite $SEG

        I=0
        RA=0
        STR=""
        while [ $I -lt $SIDES ];
        do
            FN=$(printf "out/rot%02d.png" $I)
            FNb=$(printf "out/rot%02db.png" $I)
            RD=$(echo "scale=5; 0 - ${RA}" | bc)

            convert -size $GEO \
                    $SEG \( +clone -background transparent -rotate $RD \) \
                    -gravity Center -compose Src -composite $FN

            C=($(./polyseg -s $SIDES -r $R -R $RA --int --opposite))

            convert -size $GEO $FN \
                    $FN -geometry +${C[2]}+${C[3]} -composite $FNb

            STR="$STR -page +0+0 $FNb "

            RA=$(echo "scale=5;${RA} + ${ROTDELTA}" | bc)
            I=$((I+1))
        done

        convert -size $GEO xc:black $STR  -flatten $OUT

        if [ $? ]; then
            echo "Ok"
        else
            echo "FAIL"
        fi
    else
        echo "skipped"
    fi

    FRAME=$((FRAME+1))
    ROT=$((ROT+1))
    if [ $ROT -ge 360 ]; then
        ROT=$((ROT-360))
    fi
done

